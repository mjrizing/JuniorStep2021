자바 ?
JVM 만 있으면 작동
기본 자료형을 제외한 모든 요소가 객체
객체 지향 개념의 특징 : 캡슐화, 상속, 다형성이 잘 적용 됨
가비지 컬렉션을 통한 메모리 관리
멀티 쓰레드 지원
객체 지향 프로그래밍 OOP ?
:: 오브젝트 오리엔티트 프로그래밍 ::

데이터를 객체로 취급하여 프로그램에 반영
순차적으로 프로그램이 동작하는 기존의 것들과는 다르게 객체의 상호 작용을 통해 프로그램이 동작하는 것을 말함
코드 재사용성이 높음
코드의 변경이 용이함
직관적인 코드 분석
개발속도 향상
상속을 통한 장점 그대화
객체(오브젝트) ?
변수와 그 데이터에 관련되는 함수를 모두 포함한 개념

같은 성질, 같은 구조와 형태를 가지는 객체는 등급으로 정의
등급에 속하는 객체는 그 등급의 인스턴스
자바의 최상위 클래스 ?
??

abstract 와 interface 차이 ?
interface
추상 클래스
오직 추상메소드와 상수만을 멤버로 가짐
implements 키워드 사용
상속의 관계가 없는 클래스간 서로 공동되는 로직을 구현하여쓸수 있도록 함
abstract
추상메소드 하나만 있어도 추상 클래스임
자신의 생성자로 객체 생성 불가능
하위 클래스를 참조하여 상위 클래스의 객체를 생성
하위 클래스를 제어하기 위해 사용
::: 공통점 :::

뉴 연산자로 인스턴스 생성 불가능
프로토 타입만 있는 메소드를 가진다.
사용하기 위해서는 하위 클래스에서 확장/구현 해야함
::: 차이점 :::

사용하는 키워드가 다름
abstract는 일반 메소드를 사용할 수 있지만, interface 는 메소드 선언만!!! 가능
오버로딩 과 오버라이딩 ?
오버로딩
같은 이름의 메소드를 여러개 정의 (매개변수의 타입이 다르거나 개수가 달름)
리턴 타입과 접근 제어자는 영향을 주지 않음
오버라이딩
상속에서 나온 개념 (interface implements)
상위 클래스의 메소드를 하위 클래스 에서 재 정의 (@override)
JDBC
자바 데이터 베이스 커넥션 : 자바 언어를 통해 디비에 접근 할 수 있음

다형성 ?
디자인 패턴 ?
싱글톤
기타 패턴에 대하여
쿠키와 세션 차이?
자료 구조 ?
스택과 큐
이진검색
블록킹과 넌블록킹 ?
프레임워크와 라이브러리의 차이?
프로세스와 쓰레드 ?
A. 컴퓨터가 어떤일을 하고 있는 상태를 프로세스 라고 함
동시성
병렬성 듀얼 쿼드 옥타 코어 등등
쓰레드: 역할 분담을 하는거 같은 자원을 공유 함.
공유 되는 변수에 쓰레드 둘이 동시에 건들이면 오류가 발생함
디버깅이 까다로워짐

람다, 액터 등으로 해결...

syncronized 둘 이상의 쓰레드가 동시에 손을 대지 못하게 함.
두번 접근할때 변수가 -2가 아니라ㅣ -1 이 되지 않도록 함

동기 비동기
동기: 작성된 코드 순서 그대로 실행 됨
비동기: 순서가 그대로 실행되지 않고, 해당 코드가 실행을 마칙길 기다렸다가 실행을 이어 가느 것이 아니라 이후 실행될 일을 미리 알려 줘 놓은 상태에서 다음 코드를 이어 가다가 결과가 오면 다시 그 순서대로 실행됨

멀티 쓰레드를 사용하고 있다는 것이 됨

콜백함수 를 사용.. (자바스크립트!, 자바스크립트 엔진은 싱글쓰레드 이지만 웹API와 웹이 동작하는 쓰레드에 비동기 스택을 쌓고 태스크 큐에 비동기 결과 들이 들어오는 대로 자바 스크립트 엔진에 쏴서 받은 비동기 결과를 순차적으로 출력)

HTTP 와 HTTPS 의 차이 ?
기타 프로토콜??

REST API
각 요청의 목적이 명칭만을 보고 간단하게 파악이 가능함.
예측이 가능하고 일정한 정보와 작업을 요청하는 것 (받는 결과 값이 확실함)
최근에 GraphQL 이 나옴 REST API를 대체 할 수 있는 기술

