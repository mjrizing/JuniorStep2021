@Array(배열)과 List의 차이점은 무엇인지 설명하시오. 
Array(배열)은 다수의 데이터를 묶어 효율적인 관리가 가능한 자료형으로 데이터에 접근하기 위한 인덱스가 존재합니다. 
이 인덱스를 통해 데이터를 가져오기 때문에 조회 속도가 빠릅니다. 그러나 데이터의 위치가 인덱스와 맵핑되어 고정되므로 추후 데이터가 삭제되는 경우 
배열의 빈 부분의 메모리가 낭비됩니다. 이러한 이유로 배열의 해당 인덱스에 데이터가 존재하는지 파악하는 로직이 추가적으로 필요합니다. 
또한 배열은 정의와 동시에 길이를 지정하며 길이를 바꿀 수 없는 정적 자료형 입니다.

List는 배열이 가진 인덱스의 장점을 버리고 대신 빈틈없이 데이터를 적재하는 장점을 취한 자료형입니다. 
순서가 있으며 중복이 허용됩니다. 주로 ArrayList나 LinkedList와 같은 리스트를 사용합니다. 
리스트는 자동으로 엘리먼트를 수용할 수 있는 크기가 조정되고, 리스트 내의 엘리먼트의 실제 개수를 알려줍니다.

@ 람다 함수(Lambda Function)란? 람다 함수는 함수형 프로그래밍 언어에서 사용되는 개념으로 익명 함수라고도 한다. 
Java 8 부터 지원되며, 불필요한 코드를 줄이고 가독성을 향상시키는 것을 목적으로 두고있다.

@ 제네릭(generic)이란? 데이터의 타입(data type)을 일반화한다(generalize)는 것을 의미합니다. 
제네릭은 클래스나 메소드에서 사용할 내부 데이터 타입을 컴파일 시에 미리 지정하는 방법입니다.

@버블정렬/퀵정렬 알고리즘 설명
버블정렬은 앞뒤로 데이터를 비교해서 가장 큰 데이터를 가장 뒤로 보내며 정렬하는 방식입니다. 가장 구현하기 쉬우나 비효율적인 알고리즘입니다.
퀵정렬은 작은값은 앞으로, 큰 값은 뒤로 가도록 해서 작은값과 큰 값을 서로 분리해가며 정렬하는 방식. 이 알고리즘은 재귀적입니다. 
버블정렬이나 삽입정렬보다 훨씬 효율적인 성능을 발휘합니다.

@재귀란?
어떤 문제를 해결할때까지 자기 자신을 이용하여 정의하거나 응용하는 것으로 주로, 반복적으로 스스로를 호출하거나 사용하게 됩니다.

@C언어 했는데 포인터에 대해서 설명해주세요.
변수와 같이 값을 저장하는것이 아니라, 메모리의 주소위치를 저장하는 것입니다. 

@Array와 ArrayList의 다른점이 뭔가요?
Array는 길이에 대해서 length변수를 쓰고 ArrayList는 size()메서드 사용합니다.
Array는 크기 고정되어있지만 ArrayList는 사이즈가 동적인 배열입니다.
Array는 int, byte, char(캐릭터) 등과 같은 Primitive type과 Object 모두 담을 수 있지만, ArrayList는 Object만 담을 수 있습니다.

@전역변수와 지역변수
전역변수는 함수 바깥에 선언하여 클래스 전체에서 사용가능한 변수입니다. 여러 메소드에서 공통적으로 사용할 수 있습니다. 지역변수는 함수 속에 선언하여 해당 함수 속에서만 사용가능한 변수입니다. 지역변수는 해당 메소드가 호출되어 메모리를 할당받은 후 종료되면 소멸되어 다시 사용할 수 없습니다.

@데이터타입은 뭔가요?

@데이터타입과 변수는 차이는?

@Value Type과 Refference Type의 차이?

@문자형 char type string type 왜 나누어져있는지 왜 굳이 꼭 구분해서 써야하는지

@.equals()로 비교하는방법과  ==으로 비교하는것의 차이

@string pool이 뭔지?

@변수에는 멤버변수와 지역변수가 있음. 이 두가지 중에 stack영역에 저장이 되는 변수는 무엇인지?

@멤버변수와 지역변수는 언제 메모리에서 해제가 되는지?

@heap영역에 저장되는 변수는 언제 해제가 되는지

@참조타입과 값타입이있는데 참조타입의 주소값은 어디에 저장이 되는지

@참조타입의 주소는 어디에 저장이 될까요?

@다형성이란?
하나의 클래스나 함수가 다양한 방식으로 동작이 가능한 것을 말합니다. 하나의 메시지가 전달되었을떄 수신자가 누구이냐에 따라 다른 기능을 수행합니다. 
자바에서는 오버로딩과 오버라이딩이 있습니다. 예를들면 제가 학교에 있으면 학생이라는 구성원이고, 제가 집에돌아오면 아들이라는 구성원입니다.

@ REST API란? 
- HTTP 프로토콜 장점을 살릴 수 있는 네트워크 기반 아키텍처 
- REST API을 구현하기위해 HTTP method + 모든 개체 Resource화 + URL 디자인(라우팅) 필요
- REST API를 구현하기위해 HTTP 프로토콜에 대한 이해, method 종류, 라우팅에 대한 이해가 있어야함 
- HTTP method를 클라이언트가 필요한 처리에 맞게 선택하여 서버에 요청

@정규화 작업을 하는 이유는 무엇인지?
중복을 최소화하도록 데이터를 구조화하기 위해서 관계를 재구성하는 것을 정규화라고 합니다.

@ Anomaly(이상) 현상이란? 
좋은 데이터베이스를 설계하기 위해서는 정보의 이상 현상(Anomaly)이 생기지 않도록 고려해야합니다. 
이상 현상은 갱신이상(Modification Anomaly), 삽입 이상(Insertion Anomaly), 삭제 이상(Deletion Anomaly)으로 구성됩니다.

@HTTP프로토콜이 뭔지?
인터넷상에서 데이터를 주고받기위한 서버/클라이언트 모델을 따르는 프로토콜입니다. 

@Java의 메모리 구조 - Stack과 Heap의 차이점
- Class Area(=Method Area) : 메모리로 읽어온 클래스의 정보를 기억한다. 
- heap : 클래스의 객체를 생성하여 기억한다. 
- stack : 메서드 수행 시마다 프레임이 할당되어 메서드 수행에 필요한 변수나(로컬변수), 중간 결과 값을 임시 기억한다. 메서드가 종료될 경우 할당된 메모리가 자동 제거된다.

@Git이 무엇인지 설명하고 프로젝트에서 깃허브를 사용했다면 어떤 식으로 기여했는지 설명하시오. 
git이란 형상 관리 도구 중 하나입니다. 소스코드를 효과적으로 관리할 수 있게 해주는 공개 소프트웨어입니다. 
Github는 대표적인 형상 관리 도구 웹호스팅 서비스입니다. 저는 현재도 Github Desktop을 사용하여 버전 관리를 했습니다. 
각 브랜치를 생성하여 merge를 통해 프로젝트를 업데이트 했습니다. 기본적인 pull, push, commit을 사용하여 항상 최신 버전으로 유지할 수 있도록 운영했습니다. 
이러한 Git을 사용하면 소스코드를 주고 받을 필요 없이, 같은 파일을 여러명이 동시에 작업할 수 있고. 
2. 브랜치를 통해 따로 개발한 뒤, 본 프로그램에 합치는 방식(merge)으로 개발을 진행할 수 있다. 
3. 분산 버전관리이기 때문에 인터넷이 연결되지 않은 곳에서도 개발을 진행할 수 있으며 파일이 사라져도 다시 원상복구 할 수 있습니다.

@라이브러리와 프레임워크의 차이점
라이브러리: 특정기능에 대한 도구 또는 함수들의 집합 프로그램 기능 수행을 위해 활용 가능한 도구들의 집합
프레임워크: 프로그래밍을 진행할 때 필수적인 코드, 알고리즘 등과 같이 어느 정도의 구조를 제공해주는 뼈대 흐름가지고 있음. 프레임워크 안에 라이브러리도 포함되어 있는 개념. 
라이브러리들의 집합으로 하나의 유지보수 솔루션이다.
